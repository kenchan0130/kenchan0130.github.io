name: Publish
on:
  push:
    branches:
      - development

env:
  BUNDLE_JOBS: 4
  BUNDLE_RETRY: 3
  BUNDLE_PATH: vendor/bundle
  JEKYLL_BUILD_DESTINATION_PATH: _site
  JEKYLL_ENV: production
  TZ: '/usr/share/zoneinfo/Asia/Tokyo'
  LANG: ja_JP.UTF-8
  LC_ALL: C.UTF-8
  LANGUAGE: ja_JP.UTF-8
  cache-version: v1

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install ruby gems
        run: |
          bundle check || bundle install
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - name: Install Node.js packages
        run: |
          yarn install --pure-lockfile
      - name: Run linters
        run: |
          bundle exec rake yamllint
          bundle exec rubocop
          yarn lint:run
      - name: Build Jekyll
        run: |
          yarn build
          bundle exec jekyll build --verbose --trace --config "_config.yml,_config_production.yml" --destination "${JEKYLL_BUILD_DESTINATION_PATH}"
      - name: Check generated HTML files
        run: |
          bundle exec rake htmlproofer:without_external_link["${JEKYLL_BUILD_DESTINATION_PATH}"]
      - name: Publish tag
        run: |
          NEW_TAG="release-$(date "+%Y%m%d%H%M%S")"
          echo "Create ${NEW_TAG} tag..."
          git tag "${NEW_TAG}"
          git push origin "${NEW_TAG}"
      - name: Publish GitHub Pages
        run: |
          ./scripts/deploy.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  skip-indexing:
    runs-on: ubuntu-latest
    needs: publish
    outputs:
      is_skip: ${{ steps.set_is_skip.outputs.is_skip }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set is_skip
        id: set_is_skip
        run: |
          API_RESPONSE=$(curl -sfL "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/tags")
          IS_SKIP=$(git diff --name-only --diff-filter=AMCRD "$(echo "${API_RESPONSE}" | jq -r .[0].name)" "$(echo "${API_RESPONSE}" | jq -r .[1].name)" | grep -E "^_posts/.*$" &> /dev/null && echo false || echo true)
          echo "::set-output name=is_skip::${IS_SKIP}"
      - run: echo "[skip] ${{ steps.set_is_skip.outputs.is_skip }}"

  algolia-indexing:
    runs-on: ubuntu-latest
    needs: skip-indexing
    if: ${{ ! needs.skip-indexing.outputs.is_skip }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install ruby gems
        run: |
          bundle check || bundle install
      - name: Create algolia indexing
        run: |
          ./scripts/indexing.sh
        env:
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
